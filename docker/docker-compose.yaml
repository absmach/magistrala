# Copyright (c) Abstract Machines
# SPDX-License-Identifier: Apache-2.0

name: "magistrala"

include:
  - path:
      - ./supermq-docker/docker-compose.yaml
      - ./supermq-docker/addons/journal/docker-compose.yaml
      - ./supermq-docker/addons/certs/docker-compose.yaml
      - ./supermq-docker-compose.override.yaml
    project_directory: ./supermq-docker
    env_file:
      - ./supermq-docker/.env

networks:
  magistrala-base-net:
    driver: bridge

volumes:
  magistrala-journal-volume:
  magistrala-ui-backend-db-volume:
  magistrala-re-db-volume:
  magistrala-auth-redis-volume:
  magistrala-alarms-db-volume:
  magistrala-reports-db-volume:

services:
  re-db:
    image: postgres:16.2-alpine
    container_name: magistrala-re-db
    restart: on-failure
    command: postgres -c "max_connections=${SMQ_POSTGRES_MAX_CONNECTIONS}"
    environment:
      POSTGRES_USER: ${MG_RE_DB_USER}
      POSTGRES_PASSWORD: ${MG_RE_DB_PASS}
      POSTGRES_DB: ${MG_RE_DB_NAME}
    ports:
      - 6009:5432
    networks:
      - magistrala-base-net
    volumes:
      - magistrala-re-db-volume:/var/lib/postgresql/data

  re:
    image: ghcr.io/absmach/magistrala/re:${MG_RELEASE_TAG}
    container_name: magistrala-re
    depends_on:
      - re-db
    restart: on-failure
    environment:
      MG_RE_LOG_LEVEL: ${MG_RE_LOG_LEVEL}
      MG_RE_HTTP_PORT: ${MG_RE_HTTP_PORT}
      MG_RE_HTTP_HOST: ${MG_RE_HTTP_HOST}
      MG_RE_HTTP_SERVER_CERT: ${MG_RE_HTTP_SERVER_CERT}
      MG_RE_HTTP_SERVER_KEY: ${MG_RE_HTTP_SERVER_KEY}
      MG_RE_DB_HOST: ${MG_RE_DB_HOST}
      MG_RE_DB_PORT: ${MG_RE_DB_PORT}
      MG_RE_DB_USER: ${MG_RE_DB_USER}
      MG_RE_DB_PASS: ${MG_RE_DB_PASS}
      MG_RE_DB_NAME: ${MG_RE_DB_NAME}
      MG_RE_DB_SSL_MODE: ${MG_RE_DB_SSL_MODE}
      MG_RE_DB_SSL_CERT: ${MG_RE_DB_SSL_CERT}
      MG_RE_DB_SSL_KEY: ${MG_RE_DB_SSL_KEY}
      MG_RE_DB_SSL_ROOT_CERT: ${MG_RE_DB_SSL_ROOT_CERT}
      SMQ_MESSAGE_BROKER_URL: ${SMQ_MESSAGE_BROKER_URL}
      SMQ_JAEGER_URL: ${SMQ_JAEGER_URL}
      SMQ_JAEGER_TRACE_RATIO: ${SMQ_JAEGER_TRACE_RATIO}
      SMQ_SEND_TELEMETRY: ${SMQ_SEND_TELEMETRY}
      SMQ_AUTH_GRPC_URL: ${SMQ_AUTH_GRPC_URL}
      SMQ_AUTH_GRPC_TIMEOUT: ${SMQ_AUTH_GRPC_TIMEOUT}
      SMQ_AUTH_GRPC_CLIENT_CERT: ${SMQ_AUTH_GRPC_CLIENT_CERT:+/auth-grpc-client.crt}
      SMQ_AUTH_GRPC_CLIENT_KEY: ${SMQ_AUTH_GRPC_CLIENT_KEY:+/auth-grpc-client.key}
      SMQ_AUTH_GRPC_SERVER_CA_CERTS: ${SMQ_AUTH_GRPC_SERVER_CA_CERTS:+/auth-grpc-server-ca.crt}
      SMQ_SPICEDB_PRE_SHARED_KEY: ${SMQ_SPICEDB_PRE_SHARED_KEY}
      SMQ_SPICEDB_HOST: ${SMQ_SPICEDB_HOST}
      SMQ_SPICEDB_PORT: ${SMQ_SPICEDB_PORT}
      MG_RE_INSTANCE_ID: ${MG_RE_INSTANCE_ID}
      MG_EMAIL_HOST: ${MG_EMAIL_HOST}
      MG_EMAIL_PORT: ${MG_EMAIL_PORT}
      MG_EMAIL_USERNAME: ${MG_EMAIL_USERNAME}
      MG_EMAIL_PASSWORD: ${MG_EMAIL_PASSWORD}
      MG_EMAIL_FROM_ADDRESS: ${MG_EMAIL_FROM_ADDRESS}
      MG_EMAIL_FROM_NAME: ${MG_EMAIL_FROM_NAME}
      MG_EMAIL_TEMPLATE: ${MG_EMAIL_TEMPLATE}
      MG_TIMESCALE_READER_GRPC_URL: ${MG_TIMESCALE_READER_GRPC_URL}
      MG_TIMESCALE_READER_GRPC_TIMEOUT: ${MG_TIMESCALE_READER_GRPC_TIMEOUT}
      MG_TIMESCALE_READER_GRPC_CLIENT_CERT: ${MG_TIMESCALE_READER_GRPC_CLIENT_CERT}
      MG_TIMESCALE_READER_GRPC_CLIENT_CA_CERTS: ${MG_TIMESCALE_READER_GRPC_CLIENT_CA_CERTS}
      MG_TIMESCALE_READER_GRPC_CLIENT_KEY: ${MG_TIMESCALE_READER_GRPC_CLIENT_KEY}
      SMQ_DOMAINS_GRPC_URL: ${SMQ_DOMAINS_GRPC_URL}
      SMQ_DOMAINS_GRPC_TIMEOUT: ${SMQ_DOMAINS_GRPC_TIMEOUT}
      SMQ_DOMAINS_GRPC_CLIENT_CERT: ${SMQ_DOMAINS_GRPC_CLIENT_CERT:+/domains-grpc-client.crt}
      SMQ_DOMAINS_GRPC_CLIENT_KEY: ${SMQ_DOMAINS_GRPC_CLIENT_KEY:+/domains-grpc-client.key}
      SMQ_DOMAINS_GRPC_SERVER_CA_CERTS: ${SMQ_DOMAINS_GRPC_SERVER_CA_CERTS:+/domains-grpc-server-ca.crt}
    ports:
      - ${MG_RE_HTTP_PORT}:${MG_RE_HTTP_PORT}
    networks:
      - magistrala-base-net
    volumes:
      - ./templates/${MG_RE_EMAIL_TEMPLATE}:/email.tmpl
      # Auth gRPC client certificates
      - type: bind
        source: ${SMQ_AUTH_GRPC_CLIENT_CERT:-ssl/certs/dummy/client_cert}
        target: /auth-grpc-client${SMQ_AUTH_GRPC_CLIENT_CERT:+.crt}
        bind:
          create_host_path: true
      - type: bind
        source: ${SMQ_AUTH_GRPC_CLIENT_KEY:-ssl/certs/dummy/client_key}
        target: /auth-grpc-client${SMQ_AUTH_GRPC_CLIENT_KEY:+.key}
        bind:
          create_host_path: true
      - type: bind
        source: ${SMQ_AUTH_GRPC_SERVER_CA_CERTS:-ssl/certs/dummy/server_ca}
        target: /auth-grpc-server-ca${SMQ_AUTH_GRPC_SERVER_CA_CERTS:+.crt}
        bind:
          create_host_path: true

  alarms-db:
    image: postgres:16.2-alpine
    container_name: magistrala-alarms-db
    restart: on-failure
    command: postgres -c "max_connections=${SMQ_POSTGRES_MAX_CONNECTIONS}"
    environment:
      POSTGRES_USER: ${MG_ALARMS_DB_USER}
      POSTGRES_PASSWORD: ${MG_ALARMS_DB_PASS}
      POSTGRES_DB: ${MG_ALARMS_DB_NAME}
    ports:
      - 6019:5432
    networks:
      - magistrala-base-net
    volumes:
      - magistrala-alarms-db-volume:/var/lib/postgresql/data

  alarms:
    image: ghcr.io/absmach/magistrala/alarms:${MG_RELEASE_TAG}
    container_name: magistrala-alarms
    depends_on:
      - alarms-db
    restart: on-failure
    environment:
      MG_ALARMS_LOG_LEVEL: ${MG_ALARMS_LOG_LEVEL}
      MG_ALARMS_HTTP_PORT: ${MG_ALARMS_HTTP_PORT}
      MG_ALARMS_HTTP_HOST: ${MG_ALARMS_HTTP_HOST}
      MG_ALARMS_HTTP_SERVER_CERT: ${MG_ALARMS_HTTP_SERVER_CERT}
      MG_ALARMS_HTTP_SERVER_KEY: ${MG_ALARMS_HTTP_SERVER_KEY}
      MG_ALARMS_DB_HOST: ${MG_ALARMS_DB_HOST}
      MG_ALARMS_DB_PORT: ${MG_ALARMS_DB_PORT}
      MG_ALARMS_DB_USER: ${MG_ALARMS_DB_USER}
      MG_ALARMS_DB_PASS: ${MG_ALARMS_DB_PASS}
      MG_ALARMS_DB_NAME: ${MG_ALARMS_DB_NAME}
      MG_ALARMS_DB_SSL_MODE: ${MG_ALARMS_DB_SSL_MODE}
      MG_ALARMS_DB_SSL_CERT: ${MG_ALARMS_DB_SSL_CERT}
      MG_ALARMS_DB_SSL_KEY: ${MG_ALARMS_DB_SSL_KEY}
      MG_ALARMS_DB_SSL_ROOT_CERT: ${MG_ALARMS_DB_SSL_ROOT_CERT}
      SMQ_MESSAGE_BROKER_URL: ${SMQ_MESSAGE_BROKER_URL}
      SMQ_JAEGER_URL: ${SMQ_JAEGER_URL}
      SMQ_JAEGER_TRACE_RATIO: ${SMQ_JAEGER_TRACE_RATIO}
      SMQ_AUTH_GRPC_URL: ${SMQ_AUTH_GRPC_URL}
      SMQ_AUTH_GRPC_TIMEOUT: ${SMQ_AUTH_GRPC_TIMEOUT}
      SMQ_AUTH_GRPC_CLIENT_CERT: ${SMQ_AUTH_GRPC_CLIENT_CERT:+/auth-grpc-client.crt}
      SMQ_AUTH_GRPC_CLIENT_KEY: ${SMQ_AUTH_GRPC_CLIENT_KEY:+/auth-grpc-client.key}
      SMQ_AUTH_GRPC_SERVER_CA_CERTS: ${SMQ_AUTH_GRPC_SERVER_CA_CERTS:+/auth-grpc-server-ca.crt}
      SMQ_DOMAINS_GRPC_URL: ${SMQ_DOMAINS_GRPC_URL}
      SMQ_DOMAINS_GRPC_TIMEOUT: ${SMQ_DOMAINS_GRPC_TIMEOUT}
      SMQ_DOMAINS_GRPC_CLIENT_CERT: ${SMQ_DOMAINS_GRPC_CLIENT_CERT:+/domains-grpc-client.crt}
      SMQ_DOMAINS_GRPC_CLIENT_KEY: ${SMQ_DOMAINS_GRPC_CLIENT_KEY:+/domains-grpc-client.key}
      SMQ_DOMAINS_GRPC_SERVER_CA_CERTS: ${SMQ_DOMAINS_GRPC_SERVER_CA_CERTS:+/domains-grpc-server-ca.crt}
      MG_ALARMS_INSTANCE_ID: ${MG_ALARMS_INSTANCE_ID}
    ports:
      - ${MG_ALARMS_HTTP_PORT}:${MG_ALARMS_HTTP_PORT}
    networks:
      - magistrala-base-net
    volumes:
      # Auth gRPC client certificates
      - type: bind
        source: ${SMQ_AUTH_GRPC_CLIENT_CERT:-ssl/certs/dummy/client_cert}
        target: /auth-grpc-client${SMQ_AUTH_GRPC_CLIENT_CERT:+.crt}
        bind:
          create_host_path: true
      - type: bind
        source: ${SMQ_AUTH_GRPC_CLIENT_KEY:-ssl/certs/dummy/client_key}
        target: /auth-grpc-client${SMQ_AUTH_GRPC_CLIENT_KEY:+.key}
        bind:
          create_host_path: true
      - type: bind
        source: ${SMQ_AUTH_GRPC_SERVER_CA_CERTS:-ssl/certs/dummy/server_ca}
        target: /auth-grpc-server-ca${SMQ_AUTH_GRPC_SERVER_CA_CERTS:+.crt}
        bind:
          create_host_path: true
      - type: bind
        source: ${SMQ_DOMAINS_GRPC_CLIENT_CERT:-ssl/certs/dummy/client_cert}
        target: /domains-grpc-client${SMQ_DOMAINS_GRPC_CLIENT_CERT:+.crt}
        bind:
          create_host_path: true
      - type: bind
        source: ${SMQ_DOMAINS_GRPC_CLIENT_KEY:-ssl/certs/dummy/client_key}
        target: /domains-grpc-client${SMQ_DOMAINS_GRPC_CLIENT_KEY:+.key}
        bind:
          create_host_path: true
      - type: bind
        source: ${SMQ_DOMAINS_GRPC_SERVER_CA_CERTS:-ssl/certs/dummy/server_ca}
        target: /domains-grpc-server-ca${SMQ_DOMAINS_GRPC_SERVER_CA_CERTS:+.crt}
        bind:
          create_host_path: true

  reports-db:
    image: postgres:16.2-alpine
    container_name: magistrala-reports-db
    restart: on-failure
    command: postgres -c "max_connections=${SMQ_POSTGRES_MAX_CONNECTIONS}"
    environment:
      POSTGRES_USER: ${MG_REPORTS_DB_USER}
      POSTGRES_PASSWORD: ${MG_REPORTS_DB_PASS}
      POSTGRES_DB: ${MG_REPORTS_DB_NAME}
    ports:
      - 6020:5432
    networks:
      - magistrala-base-net
    volumes:
      - magistrala-reports-db-volume:/var/lib/postgresql/data

  reports:
    image: ghcr.io/absmach/magistrala/reports:${MG_RELEASE_TAG}
    container_name: magistrala-reports
    depends_on:
      - reports-db
    restart: on-failure
    environment:
      MG_REPORTS_LOG_LEVEL: ${MG_REPORTS_LOG_LEVEL}
      MG_REPORTS_HTTP_PORT: ${MG_REPORTS_HTTP_PORT}
      MG_REPORTS_HTTP_HOST: ${MG_REPORTS_HTTP_HOST}
      MG_REPORTS_HTTP_SERVER_CERT: ${MG_REPORTS_HTTP_SERVER_CERT}
      MG_REPORTS_HTTP_SERVER_KEY: ${MG_REPORTS_HTTP_SERVER_KEY}
      MG_REPORTS_DB_HOST: ${MG_REPORTS_DB_HOST}
      MG_REPORTS_DB_PORT: ${MG_REPORTS_DB_PORT}
      MG_REPORTS_DB_USER: ${MG_REPORTS_DB_USER}
      MG_REPORTS_DB_PASS: ${MG_REPORTS_DB_PASS}
      MG_REPORTS_DB_NAME: ${MG_REPORTS_DB_NAME}
      MG_REPORTS_DB_SSL_MODE: ${MG_REPORTS_DB_SSL_MODE}
      MG_REPORTS_DB_SSL_CERT: ${MG_REPORTS_DB_SSL_CERT}
      MG_REPORTS_DB_SSL_KEY: ${MG_REPORTS_DB_SSL_KEY}
      MG_REPORTS_DB_SSL_ROOT_CERT: ${MG_REPORTS_DB_SSL_ROOT_CERT}
      SMQ_MESSAGE_BROKER_URL: ${SMQ_MESSAGE_BROKER_URL}
      SMQ_JAEGER_URL: ${SMQ_JAEGER_URL}
      SMQ_JAEGER_TRACE_RATIO: ${SMQ_JAEGER_TRACE_RATIO}
      SMQ_SEND_TELEMETRY: ${SMQ_SEND_TELEMETRY}
      SMQ_AUTH_GRPC_URL: ${SMQ_AUTH_GRPC_URL}
      SMQ_AUTH_GRPC_TIMEOUT: ${SMQ_AUTH_GRPC_TIMEOUT}
      SMQ_AUTH_GRPC_CLIENT_CERT: ${SMQ_AUTH_GRPC_CLIENT_CERT:+/auth-grpc-client.crt}
      SMQ_AUTH_GRPC_CLIENT_KEY: ${SMQ_AUTH_GRPC_CLIENT_KEY:+/auth-grpc-client.key}
      SMQ_AUTH_GRPC_SERVER_CA_CERTS: ${SMQ_AUTH_GRPC_SERVER_CA_CERTS:+/auth-grpc-server-ca.crt}
      SMQ_SPICEDB_PRE_SHARED_KEY: ${SMQ_SPICEDB_PRE_SHARED_KEY}
      SMQ_SPICEDB_HOST: ${SMQ_SPICEDB_HOST}
      SMQ_SPICEDB_PORT: ${SMQ_SPICEDB_PORT}
      MG_REPORTS_INSTANCE_ID: ${MG_RE_INSTANCE_ID}
      MG_EMAIL_HOST: ${MG_EMAIL_HOST}
      MG_EMAIL_PORT: ${MG_EMAIL_PORT}
      MG_EMAIL_USERNAME: ${MG_EMAIL_USERNAME}
      MG_EMAIL_PASSWORD: ${MG_EMAIL_PASSWORD}
      MG_EMAIL_FROM_ADDRESS: ${MG_EMAIL_FROM_ADDRESS}
      MG_EMAIL_FROM_NAME: ${MG_EMAIL_FROM_NAME}
      MG_EMAIL_TEMPLATE: ${MG_EMAIL_TEMPLATE}
      MG_TIMESCALE_READER_GRPC_URL: ${MG_TIMESCALE_READER_GRPC_URL}
      MG_TIMESCALE_READER_GRPC_TIMEOUT: ${MG_TIMESCALE_READER_GRPC_TIMEOUT}
      MG_TIMESCALE_READER_GRPC_CLIENT_CERT: ${MG_TIMESCALE_READER_GRPC_CLIENT_CERT}
      MG_TIMESCALE_READER_GRPC_SERVER_CA_CERTS: ${MG_TIMESCALE_READER_GRPC_SERVER_CA_CERTS}
      MG_TIMESCALE_READER_GRPC_CLIENT_KEY: ${MG_TIMESCALE_READER_GRPC_CLIENT_KEY}
      SMQ_DOMAINS_GRPC_URL: ${SMQ_DOMAINS_GRPC_URL}
      SMQ_DOMAINS_GRPC_TIMEOUT: ${SMQ_DOMAINS_GRPC_TIMEOUT}
      SMQ_DOMAINS_GRPC_CLIENT_CERT: ${SMQ_DOMAINS_GRPC_CLIENT_CERT:+/domains-grpc-client.crt}
      SMQ_DOMAINS_GRPC_CLIENT_KEY: ${SMQ_DOMAINS_GRPC_CLIENT_KEY:+/domains-grpc-client.key}
      SMQ_DOMAINS_GRPC_SERVER_CA_CERTS: ${SMQ_DOMAINS_GRPC_SERVER_CA_CERTS:+/domains-grpc-server-ca.crt}
    ports:
      - ${MG_REPORTS_HTTP_PORT}:${MG_REPORTS_HTTP_PORT}
    networks:
      - magistrala-base-net
    volumes:
      - ./templates/${MG_REPORTS_EMAIL_TEMPLATE}:/email.tmpl
      # Auth gRPC client certificates
      - type: bind
        source: ${SMQ_AUTH_GRPC_CLIENT_CERT:-ssl/certs/dummy/client_cert}
        target: /auth-grpc-client${SMQ_AUTH_GRPC_CLIENT_CERT:+.crt}
        bind:
          create_host_path: true
      - type: bind
        source: ${SMQ_AUTH_GRPC_CLIENT_KEY:-ssl/certs/dummy/client_key}
        target: /auth-grpc-client${SMQ_AUTH_GRPC_CLIENT_KEY:+.key}
        bind:
          create_host_path: true
      - type: bind
        source: ${SMQ_AUTH_GRPC_SERVER_CA_CERTS:-ssl/certs/dummy/server_ca}
        target: /auth-grpc-server-ca${SMQ_AUTH_GRPC_SERVER_CA_CERTS:+.crt}
        bind:
          create_host_path: true
