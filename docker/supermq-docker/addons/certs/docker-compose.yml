# Copyright (c) Abstract Machines
# SPDX-License-Identifier: Apache-2.0

# This docker-compose file contains optional certs services. Since it's optional, this file is
# dependent of docker-compose file from <project_root>/docker. In order to run this services, execute command:
# docker compose -f docker/docker-compose.yml -f docker/addons/certs/docker-compose.yml up
# from project root.

networks:
  supermq-base-net:

volumes:
  supermq-certs-db-volume:


services:
  certs:
    image: supermq/certs:${SMQ_RELEASE_TAG}
    container_name: supermq-certs
    depends_on:
      - am-certs
    restart: on-failure
    networks:
      - supermq-base-net
    ports:
      - ${SMQ_CERTS_HTTP_PORT}:${SMQ_CERTS_HTTP_PORT}
    environment:
      SMQ_CERTS_LOG_LEVEL: ${SMQ_CERTS_LOG_LEVEL}
      SMQ_CERTS_SIGN_CA_PATH: ${SMQ_CERTS_SIGN_CA_PATH}
      SMQ_CERTS_SIGN_CA_KEY_PATH: ${SMQ_CERTS_SIGN_CA_KEY_PATH}
      SMQ_CERTS_VAULT_HOST: ${SMQ_CERTS_VAULT_HOST}
      SMQ_CERTS_VAULT_NAMESPACE: ${SMQ_CERTS_VAULT_NAMESPACE}
      SMQ_CERTS_VAULT_APPROLE_ROLEID: ${SMQ_CERTS_VAULT_APPROLE_ROLEID}
      SMQ_CERTS_VAULT_APPROLE_SECRET: ${SMQ_CERTS_VAULT_APPROLE_SECRET}
      SMQ_CERTS_VAULT_CLIENTS_CERTS_PKI_PATH: ${SMQ_CERTS_VAULT_CLIENTS_CERTS_PKI_PATH}
      SMQ_CERTS_VAULT_CLIENTS_CERTS_PKI_ROLE_NAME: ${SMQ_CERTS_VAULT_CLIENTS_CERTS_PKI_ROLE_NAME}
      SMQ_CERTS_HTTP_HOST: ${SMQ_CERTS_HTTP_HOST}
      SMQ_CERTS_HTTP_PORT: ${SMQ_CERTS_HTTP_PORT}
      SMQ_CERTS_HTTP_SERVER_CERT: ${SMQ_CERTS_HTTP_SERVER_CERT}
      SMQ_CERTS_HTTP_SERVER_KEY: ${SMQ_CERTS_HTTP_SERVER_KEY}
      SMQ_CERTS_DB_HOST: ${SMQ_CERTS_DB_HOST}
      SMQ_CERTS_DB_PORT: ${SMQ_CERTS_DB_PORT}
      SMQ_CERTS_DB_PASS: ${SMQ_CERTS_DB_PASS}
      SMQ_CERTS_DB_USER: ${SMQ_CERTS_DB_USER}
      SMQ_CERTS_DB_NAME: ${SMQ_CERTS_DB_NAME}
      SMQ_CERTS_DB_SSL_MODE: ${SMQ_CERTS_DB_SSL_MODE}
      SMQ_CERTS_DB_SSL_CERT: ${SMQ_CERTS_DB_SSL_CERT}
      SMQ_CERTS_DB_SSL_KEY: ${SMQ_CERTS_DB_SSL_KEY}
      SMQ_CERTS_DB_SSL_ROOT_CERT: ${SMQ_CERTS_DB_SSL_ROOT_CERT}
      SMQ_CERTS_SDK_HOST: ${SMQ_CERTS_SDK_HOST}
      SMQ_CERTS_SDK_CERTS_URL: ${SMQ_CERTS_SDK_CERTS_URL}
      SMQ_CERTS_SDK_TLS_VERIFICATION: ${SMQ_CERTS_SDK_TLS_VERIFICATION}
      SMQ_AUTH_GRPC_URL: ${SMQ_AUTH_GRPC_URL}
      SMQ_AUTH_GRPC_TIMEOUT: ${SMQ_AUTH_GRPC_TIMEOUT}
      SMQ_AUTH_GRPC_CLIENT_CERT: ${SMQ_AUTH_GRPC_CLIENT_CERT:+/auth-grpc-client.crt}
      SMQ_AUTH_GRPC_CLIENT_KEY: ${SMQ_AUTH_GRPC_CLIENT_KEY:+/auth-grpc-client.key}
      SMQ_AUTH_GRPC_SERVER_CA_CERTS: ${SMQ_AUTH_GRPC_SERVER_CA_CERTS:+/auth-grpc-server-ca.crt}
      SMQ_CLIENTS_URL: ${SMQ_CLIENTS_URL}
      SMQ_JAEGER_URL: ${SMQ_JAEGER_URL}
      SMQ_JAEGER_TRACE_RATIO: ${SMQ_JAEGER_TRACE_RATIO}
      SMQ_SEND_TELEMETRY: ${SMQ_SEND_TELEMETRY}
      SMQ_CERTS_INSTANCE_ID: ${SMQ_CERTS_INSTANCE_ID}
    volumes:
      - ../../ssl/certs/ca.key:/etc/ssl/certs/ca.key
      - ../../ssl/certs/ca.crt:/etc/ssl/certs/ca.crt
      - type: bind
        source: ${SMQ_ADDONS_CERTS_PATH_PREFIX}${SMQ_AUTH_GRPC_CLIENT_CERT:-./ssl/certs/dummy/client_cert}
        target: /auth-grpc-client${SMQ_AUTH_GRPC_CLIENT_CERT:+.crt}
        bind:
          create_host_path: true
      - type: bind
        source: ${SMQ_ADDONS_CERTS_PATH_PREFIX}${SMQ_AUTH_GRPC_CLIENT_KEY:-./ssl/certs/dummy/client_key}
        target: /auth-grpc-client${SMQ_AUTH_GRPC_CLIENT_KEY:+.key}
        bind:
          create_host_path: true
      - type: bind
        source: ${SMQ_ADDONS_CERTS_PATH_PREFIX}${SMQ_AUTH_GRPC_SERVER_CA_CERTS:-./ssl/certs/dummy/server_ca}
        target: /auth-grpc-server-ca${SMQ_AUTH_GRPC_SERVER_CA_CERTS:+.crt}
        bind:
          create_host_path: true

  am-certs-db:
    image: postgres:16.2-alpine
    container_name: supermq-am-certs-db
    restart: on-failure
    networks:
      - supermq-base-net
    command: postgres -c "max_connections=${SMQ_POSTGRES_MAX_CONNECTIONS}"
    environment:
      POSTGRES_USER: ${SMQ_CERTS_DB_USER}
      POSTGRES_PASSWORD: ${SMQ_CERTS_DB_PASS}
      POSTGRES_DB: ${SMQ_CERTS_DB_NAME}
    ports:
      - 5454:5432
    volumes:
      - supermq-certs-db-volume:/var/lib/postgresql/data

  am-certs:
    image: ghcr.io/absmach/certs:${SMQ_RELEASE_TAG}
    container_name: supermq-am-certs
    depends_on:
      - am-certs-db
    restart: on-failure
    networks:
      - supermq-base-net
    environment:
      AM_CERTS_LOG_LEVEL: ${SMQ_CERTS_LOG_LEVEL}
      AM_CERTS_DB_HOST: ${SMQ_CERTS_DB_HOST}
      AM_CERTS_DB_PORT: ${SMQ_CERTS_DB_PORT}
      AM_CERTS_DB_USER: ${SMQ_CERTS_DB_USER}
      AM_CERTS_DB_PASS: ${SMQ_CERTS_DB_PASS}
      AM_CERTS_DB: ${SMQ_CERTS_DB_NAME}
      AM_CERTS_DB_SSL_MODE: ${SMQ_CERTS_DB_SSL_MODE}
      AM_CERTS_HTTP_HOST: supermq-am-certs
      AM_CERTS_HTTP_PORT: 9010
      AM_CERTS_GRPC_HOST: supermq-am-certs
      AM_CERTS_GRPC_PORT: 7012
      AM_JAEGER_URL: ${SMQ_JAEGER_URL}
      AM_JAEGER_TRACE_RATIO: ${SMQ_JAEGER_TRACE_RATIO}
    volumes:
     - ./config.yml:/config/config.yml
    ports:
      - 9010:9010
      - 7012:7012
